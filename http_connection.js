/*
 HTTP Interface for the WebSocketRails client.
 */
var __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __hasProp = {}.hasOwnProperty;

WebSocketRails.HttpConnection = (function(_super) {
  __extends(HttpConnection, _super);

  HttpConnection.prototype.connection_type = 'http';

  function HttpConnection(url, _at_dispatcher) {
    var e;
    this.dispatcher = _at_dispatcher;
    HttpConnection.__super__.constructor.apply(this, arguments);
    this._url = "http://" + url;
    this.dispatcher.$http.get(this._url);
  }

  HttpConnection.prototype.send_event = function(event) {
    HttpConnection.__super__.send_event.apply(this, arguments);
    return this._post_data(event.serialize());
  };

  HttpConnection.prototype._post_data = function(payload) {
    return this.dispatcher.$http.post(this._url, {
      client_id: this.connection_id,
      data: payload
    });
  };

  return HttpConnection;

})(WebSocketRails.AbstractConnection);

// ---
// generated by coffee-script 1.9.0